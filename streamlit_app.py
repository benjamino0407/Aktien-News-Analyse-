# -*- coding: utf-8 -*-
"""Untitled2.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1H15kMSblo4sjVALTraZmoZkJVJZFjem_

# Neuer Abschnitt
"""

# 📦 Installation (nur 1x nötig)

# 📚 Imports
from transformers import pipeline
from newsapi import NewsApiClient

# 🔑 News API-Key (deiner!)
newsapi = NewsApiClient(api_key="58ea5651ae5244929c604838e6f88a9b")

# 📥 News abrufen
def get_news(query):
    all_articles = newsapi.get_everything(q=query, language='de', sort_by='publishedAt', page_size=5)
    return [(a['title'], a.get('description', '')) for a in all_articles['articles']]

# 🧠 Kostenloses Modell für Sentiment
sentiment_analyzer = pipeline("sentiment-analysis", model="cardiffnlp/twitter-roberta-base-sentiment")

# 📊 Ergebnisse auswerten
def analyze_news(titel, beschreibung):
    text = titel + ". " + beschreibung
    result = sentiment_analyzer(text[:512])[0]  # max. 512 Zeichen
    return result['label'], round(result['score'], 2)



    # 🧠 Stimmung übersetzen und in Empfehlung umwandeln
def label_to_text(label):
    if label == "LABEL_2":
        return "✅ POSITIV – Kaufen"
    elif label == "LABEL_1":
        return "🤔 Neutral – Beobachten"
    elif label == "LABEL_0":
        return "❌ Negativ – Nicht kaufen"
    else:
        return "Unklar"

# 🚀 Test mit Thema "Tesla"
thema = "Tesla"
news = get_news(thema)

# ✨ Ausgabe mit Empfehlung
for titel, beschreibung in news:
    label, score = analyze_news(titel, beschreibung)
    empfehlung = label_to_text(label)
    print("📰", titel)
    print("📊 Stimmung:", empfehlung, f"(Score: {score})")
    print("-" * 60)
